Horner<-function(coeffs,x) {
res <- vector()
for (i in 1:length(x)) {
temp = coeffs[1]
for (j in 2:length(coeffs)) {
temp = temp*x[i] + coeffs[j]
res[i] <- temp
}
}
return(res)
}
coeffs<-c(2,-8,3,7)
x<-c(3,6,9,12)
Horner(coeffs,x)
options(digits=10)
accounts=runif(10000,100,100000)
accounts = floor(accounts*100)/100
interest = accounts*(.05/365)
day <- 0
illegal <- 0
while (illegal<1000000) {
day <- day+1
interest = accounts*(.05/365)
dep <- floor(interest*100)/100
illegal <- illegal + sum(interest-dep)
accounts <- accounts+dep
}
print(day/365)
(1/720)*(pi/4)^6
x=seq(-pi/2,pi/2,0.1)
y1=cos(x)
plot(x,y1,type="l")
y2=1-1/2*x^2
lines(x,y2)
y3=1-1/2*x^2+(1/24)*x^4
lines(x,y3)
1000000000000000000 + 100 - 1000000000000000000
x <- 1e200 * (0:79 %% 2 - 0.5) * (pi**((1:80 - 40) / 10))
(L <- sqrt(sum(x^2)))
(uniformSamples<-runif(10,0,1))
mean(uniformSamples)
# Define a polynomial function
f = function(x) {x^3 + x^2 - 24*x + 36}
# Plot the function
x = seq(-8,4,len=10000)
plot(x,f(x),type="l",lwd=3,main="f(x) = x^3 + x^2-24 * x +36")
abline(0,0,col="red")
(7/3 − 4/3) − 1
(7/3-4/3)-1
(7/3-4/3)-1
(7/3-4/3)-1
(7/3-4/3)-1
(7/3-4/3)-1
# Define a polynomial function
f = function(x) {x^3 + x^2 - 24*x + 36}
# Plot the function
x = seq(-8,4,len=10000)
plot(x,f(x),type="l",lwd=3,main="f(x) = x^3 + x^2-24 * x +36")
abline(0,0,col="red")
7.Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
(7).Machine$double.eps
options(digits=20)
(7).Machine$double.eps
options(digits=20)
(7).Machine$double.eps
options(digits=20)
7.Machine$double.eps
options(digits=20)
.Machine$double.eps
options(digits=20)
.Machine$double.eps
options(digits=20)
.Machine$double.eps
options(digits=20)
.Machine$double.eps
options(digits=20)
.Machine$double.eps
options(digits=20)
.Machine$double.eps
options(digits=20)
.Machine$double.eps
options(digits=20)
.Machine$double.eps
options(digits=20)
.Machine$double.eps
options(digits=20)
.Machine$double.eps
options(digits=0)
.Machine$double.eps
options(digits=10)
.Machine$double.eps
options(digits=120)
options(digits=30)
options(digits=9)
.Machine$double.eps
options(digits=8)
.Machine$double.eps
options(digits=7)
.Machine$double.eps
options(digits=8)
.Machine$double.eps
options(digits=9)
.Machine$double.eps
options(digits=20)
.Machine$double.eps
4/7-3/4
options(digits=20)
.Machine$double.eps
7/3-4/3
options(digits=20)
.Machine$double.eps
(7/3-4/3)-1
options(digits=20)
.Machine$double.eps
options(digits=20)
((7/3-4/3)-1)=.Machine$double.eps
options(digits=20)
((7/3-4/3)-1)=(.Machine$double.eps)
((7/3-4/3)-1)=
options(digits=20)
(7/3-4/3)-1
options(digits=20)
.Machine$double.eps
(7/3-4/3)-1
options(digits=20)
.Machine$double.eps
(7/3-4/3)-1
options(digits=20)
.Machine$double.eps
(7/3-4/3)-1
options(digits=20)
.Machine$double.eps
(7/3-4/3)-1
options(digits=20)
.Machine$double.eps
(7/3-4/3)-1
options(digits=20)
.Machine$double.eps
(4/3-1/3)-1
options(digits=20)
.Machine$double.eps
(4/3-1/3)-1
options(digits=20)
.Machine$double.eps
(4/3-1/3)-1
(4/3-1/3)-1
day <- 0
illegal <- 0
while (illegal<1000000) {
day <- day+1
interest = accounts*(.05/365)
dep <- floor(interest*100)/100
illegal <- illegal + sum(interest-dep)
accounts <- accounts+dep
}
print(day)
print(day/365)
Horner<-function(coeffs,x) {
res <- vector()
for (i in 1:length(x)) {
temp = coeffs[1]
for (j in 2:length(coeffs)) {
temp = temp*x[i] + coeffs[j]
res[i] <- temp
}
}
return(res)
}
coeffs<-c(2,-8,3,7)
x<-c(3,6,9,12)
Horner(coeffs,x)
options(digits=10)
accounts=runif(10000,100,100000)
accounts = floor(accounts*100)/100
interest = accounts*(.05/365)
day <- 0
illegal <- 0
while (illegal<1000000) {
day <- day+1
interest = accounts*(.05/365)
dep <- floor(interest*100)/100
illegal <- illegal + sum(interest-dep)
accounts <- accounts+dep
}
print(day)
print(day/365)
(1/720)*(pi/4)^6
x=seq(-pi/2,pi/2,0.1)
y1=cos(x)
plot(x,y1,type="l")
y2=1-1/2*x^2
lines(x,y2)
y3=1-1/2*x^2+(1/24)*x^4
lines(x,y3)
(7/3-4/3)-1
options(digits=20)
.Machine$double.eps
(4/3-1/3)-1
1000000000000000000 + 100 - 1000000000000000000
x <- 1e200 * (0:79 %% 2 - 0.5) * (pi**((1:80 - 40) / 10))
(L <- sqrt(sum(x^2)))
(uniformSamples<-runif(10,0,1))
mean(uniformSamples)
# Define a polynomial function
f = function(x) {x^3 + x^2 - 24*x + 36}
# Plot the function
x = seq(-8,4,len=10000)
plot(x,f(x),type="l",lwd=3,main="f(x) = x^3 + x^2-24 * x +36")
abline(0,0,col="red")
day <- 0
illegal <- 0
while (illegal<1000000) {
day <- day+1
interest = accounts*(.05/365)
dep <- floor(interest*100)/100
illegal <- illegal + sum(interest-dep)
accounts <- accounts+dep
}
print(day)
print(day/365)
Horner<-function(coeffs,x) {
res <- vector()
for (i in 1:length(x)) {
temp = coeffs[1]
for (j in 2:length(coeffs)) {
temp = temp*x[i] + coeffs[j]
res[i] <- temp
}
}
return(res)
}
coeffs<-c(2,-8,3,7)
x<-c(3,6,9,12)
Horner(coeffs,x)
options(digits=10)
accounts=runif(10000,100,100000)
accounts = floor(accounts*100)/100
interest = accounts*(.05/365)
day <- 0
illegal <- 0
while (illegal<1000000) {
day <- day+1
interest = accounts*(.05/365)
dep <- floor(interest*100)/100
illegal <- illegal + sum(interest-dep)
accounts <- accounts+dep
}
print(day)
print(day/365)
(1/720)*(pi/4)^6
x=seq(-pi/2,pi/2,0.1)
y1=cos(x)
plot(x,y1,type="l")
y2=1-1/2*x^2
lines(x,y2)
y3=1-1/2*x^2+(1/24)*x^4
lines(x,y3)
(7/3-4/3)-1
options(digits=20)
.Machine$double.eps
(4/3-1/3)-1
1000000000000000000 + 100 - 1000000000000000000
x <- 1e200 * (0:79 %% 2 - 0.5) * (pi**((1:80 - 40) / 10))
(L <- sqrt(sum(x^2)))
(uniformSamples<-runif(10,0,1))
mean(uniformSamples)
# Define a polynomial function
f = function(x) {x^3 + x^2 - 24*x + 36}
# Plot the function
x = seq(-8,4,len=10000)
plot(x,f(x),type="l",lwd=3,main="f(x) = x^3 + x^2-24 * x +36")
abline(0,0,col="red")
Horner<-function(coeffs,x) {
res <- vector()
for (i in 1:length(x)) {
temp = coeffs[1]
for (j in 2:length(coeffs)) {
temp = temp*x[i] + coeffs[j]
res[i] <- temp
}
}
return(res)
}
coeffs<-c(2,-8,3,7)
x<-c(3,6,9,12)
Horner(coeffs,x)
options(digits=10)
accounts=runif(10000,100,100000)
accounts = floor(accounts*100)/100
interest = accounts*(.05/365)
day <- 0
illegal <- 0
while (illegal<1000000) {
day <- day+1
interest = accounts*(.05/365)
dep <- floor(interest*100)/100
illegal <- illegal + sum(interest-dep)
accounts <- accounts+dep
}
print(day)
print(day/365)
(1/720)*(pi/4)^6
x=seq(-pi/2,pi/2,0.1)
y1=cos(x)
plot(x,y1,type="l")
y2=1-1/2*x^2
lines(x,y2)
y3=1-1/2*x^2+(1/24)*x^4
lines(x,y3)
(7/3-4/3)-1
options(digits=20)
.Machine$double.eps
(4/3-1/3)-1
1000000000000000000 + 100 - 1000000000000000000
x <- 1e200 * (0:79 %% 2 - 0.5) * (pi**((1:80 - 40) / 10))
(L <- sqrt(sum(x^2)))
(uniformSamples<-runif(10,0,1))
mean(uniformSamples)
# Define a polynomial function
f = function(x) {x^3 + x^2 - 24*x + 36}
# Plot the function
x = seq(-8,4,len=10000)
plot(x,f(x),type="l",lwd=3,main="f(x) = x^3 + x^2-24 * x +36")
abline(0,0,col="red")
day <- 0
illegal <- 0
while (illegal<1000000) {
day <- day+1
interest = accounts*(.05/365)
dep <- floor(interest*100)/100
illegal <- illegal + sum(interest-dep)
accounts <- accounts+dep
}
print(day)
print(day/365)
day <- 0
illegal <- 0
while (illegal<1000000) {
day <- day+1
interest = accounts*(.05/365)
dep <- floor(interest*100)/100
illegal <- illegal + sum(interest-dep)
accounts <- accounts+dep
}
print(day)
print(day/365)
day <- 0
illegal <- 0
while (illegal<1000000) {
day <- day+1
interest = accounts*(.05/365)
dep <- floor(interest*100)/100
illegal <- illegal + sum(interest-dep)
accounts <- accounts+dep
}
print(day)
print(day/365)
Horner<-function(coeffs,x) {
res <- vector()
for (i in 1:length(x)) {
temp = coeffs[1]
for (j in 2:length(coeffs)) {
temp = temp*x[i] + coeffs[j]
res[i] <- temp
}
}
return(res)
}
coeffs<-c(2,-8,3,7)
x<-c(3,6,9,12)
Horner(coeffs,x)
options(digits=10)
accounts=runif(10000,100,100000)
accounts = floor(accounts*100)/100
interest = accounts*(.05/365)
day <- 0
illegal <- 0
while (illegal<1000000) {
day <- day+1
interest = accounts*(.05/365)
dep <- floor(interest*100)/100
illegal <- illegal + sum(interest-dep)
accounts <- accounts+dep
}
print(day)
print(day/365)
(1/720)*(pi/4)^6
x=seq(-pi/2,pi/2,0.1)
y1=cos(x)
plot(x,y1,type="l")
y2=1-1/2*x^2
lines(x,y2)
y3=1-1/2*x^2+(1/24)*x^4
lines(x,y3)
(7/3-4/3)-1
options(digits=20)
.Machine$double.eps
(4/3-1/3)-1
1000000000000000000 + 100 - 1000000000000000000
x <- 1e200 * (0:79 %% 2 - 0.5) * (pi**((1:80 - 40) / 10))
(L <- sqrt(sum(x^2)))
(uniformSamples<-runif(10,0,1))
mean(uniformSamples)
# Define a polynomial function
f = function(x) {x^3 + x^2 - 24*x + 36}
# Plot the function
x = seq(-8,4,len=10000)
plot(x,f(x),type="l",lwd=3,main="f(x) = x^3 + x^2-24 * x +36")
abline(0,0,col="red")
Horner<-function(coeffs,x) {
res <- vector()
for (i in 1:length(x)) {
temp = coeffs[1]
for (j in 2:length(coeffs)) {
temp = temp*x[i] + coeffs[j]
res[i] <- temp
}
}
return(res)
}
coeffs<-c(2,-8,3,7)
x<-c(3,6,9,12)
Horner(coeffs,x)
options(digits=10)
accounts=runif(10000,100,100000)
accounts = floor(accounts*100)/100
interest = accounts*(.05/365)
day <- 0
illegal <- 0
while (illegal<1000000) {
day <- day+1
interest = accounts*(.05/365)
dep <- floor(interest*100)/100
illegal <- illegal + sum(interest-dep)
accounts <- accounts+dep
}
print(day)
print(day/365)
(1/720)*(pi/4)^6
x=seq(-pi/2,pi/2,0.1)
y1=cos(x)
plot(x,y1,type="l")
y2=1-1/2*x^2
lines(x,y2)
y3=1-1/2*x^2+(1/24)*x^4
lines(x,y3)
(7/3-4/3)-1
options(digits=20)
.Machine$double.eps
(4/3-1/3)-1
1000000000000000000 + 100 - 1000000000000000000
x <- 1e200 * (0:79 %% 2 - 0.5) * (pi**((1:80 - 40) / 10))
(L <- sqrt(sum(x^2)))
(uniformSamples<-runif(10,0,1))
mean(uniformSamples)
# Define a polynomial function
f = function(x) {x^3 + x^2 - 24*x + 36}
# Plot the function
x = seq(-8,4,len=10000)
plot(x,f(x),type="l",lwd=3,main="f(x) = x^3 + x^2-24 * x +36")
abline(0,0,col="red")
